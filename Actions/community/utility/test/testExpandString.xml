<?xml version='1.0' encoding='UTF-8'?>
<dunes-script-module name="testExpandString" result-type="boolean" api-version="6.0.0" id="6ac7aa2e-2585-46ba-910d-26086ca246d2" version="0.0.2" allowed-operations="vfe" category-name="community.utility.test">
  <script encoded="false"><![CDATA[var prop = { first: "First", second: "Second", third: 'Third', first2: "${first}"};
var nestedProp = { nfirst: "NFirst", nsecond: "NSecond", five: "5"};
prop.nested = nestedProp;
var str;
var soln;
var csoln;
var pass = 0;
var fail = 0;
var testNo = 1;

/// Check nested properites and != conditional
System.log("################ Test 1 ###################");
str = "${nested.nfirst != 'First'? 'NFirst one'} test";
soln = "NFirst one test";

csoln = System.getModule("community.utility").expandString(str, prop, null);

System.log("Input is " + str);
System.log("Solution is " + csoln);

if (csoln != soln) {
    fail++;
    System.log("Expecting   " + soln);
    System.log("Test " + testNo + " FAILURE");
} else {
    pass++;
    System.log("Test  " + testNo + " Passed");
}

// Check == conditional and \\${ escaping variable expansion
testNo++;
System.log("################ Test 2 ###################");
str = "\\${second} ${first == 'First'? 'First one'} test";
soln = "${second} First one test";

csoln = System.getModule("community.utility").expandString(str, prop, null);

System.log("Input is " + str);
System.log("Solution is " + csoln);

if (csoln != soln) {
    fail++;
    System.log("Test " + testNo + " FAILURE");
    System.log("Expecting   " + soln);
} else {
    pass++;
    System.log("Test  " + testNo + " Passed");
}

// Check nested conditionals and multiple variables and quote compression
testNo++;
System.log("################ Test 3 ###################");
str = "hello ${ 'first''quote '+ to_lower('SECOND', third) + '_suffix'   } world ${first2 + ' one'} cond ${'First' == 5? 'yes' : to_lower(second) == 'second'? 'syes': 'sno'} end";
soln = "hello first'quote second_suffix world First one cond syes end"

csoln = System.getModule("community.utility").expandString(str, prop, null);

System.log("Input is " + str);
System.log("Solution is " + csoln);

if (csoln != soln) {
    fail++;
    System.log("Test " + testNo + " FAILURE");
    System.log("Expecting   " + soln);
} else {
    pass++;
    System.log("Test  " + testNo + " Passed");
}

// Check numeric comparison in conditionals
testNo++;
System.log("################ Test 4 ###################");
str = "${'07' > five? 'Seven it is': 'Five it is'}";
soln = "Seven it is"

csoln = System.getModule("community.utility").expandString(str, nestedProp, null);

System.log("Input is " + str);
System.log("Solution is " + csoln);

if (csoln != soln) {
    fail++;
    System.log("Expecting   " + soln);
    System.log("Test " + testNo + " FAILURE");
} else {
    pass++;
    System.log("Test  " + testNo + " Passed");
}

// Check Functions Set 1
testNo++;
System.log("################ Test 5 ###################");
str = '${to_lower("ABC") + to_upper(first) + trim ("  \tghi ")}';
soln = "abcFIRSTghi"

csoln = System.getModule("community.utility").expandString(str, prop, null);

System.log("Input is " + str);
System.log("Solution is " + csoln);

if (csoln != soln) {
    fail++;
    System.log("Expecting   " + soln);
    System.log("Test " + testNo + " FAILURE");
} else {
    pass++;
    System.log("Test  " + testNo + " Passed");
}

System.log("Pass = " + pass + ", fail = " + fail);

return (pass == 5);]]></script>
</dunes-script-module>